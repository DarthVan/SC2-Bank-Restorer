import{a as N,b,R,j as a,C as v,g as H,L as A,I as w,S as E,B as F,o as M,u as k,r as h,m as J,M as P,e as _,d as q,c as X,h as W,E as Z,f as O}from"./index-r2nqY7Qg.js";import{e as I,a as K,f as B,d as T,B as U}from"./index-IbwyrC5S.js";/*!
 * sc2-bank-generator v.1.1.0
 *
 * Compiled from:
 *
 * sc2-bank-generator/src/components/maps/zombie-world-liberty/store.ts
 * sc2-bank-generator/src/components/maps/zombie-world-liberty/functions.ts
 * sc2-bank-generator/src/components/maps/zombie-world-liberty/hero.tsx
 * sc2-bank-generator/src/components/maps/zombie-world-liberty/jewel.tsx
 * sc2-bank-generator/src/components/maps/zombie-world-liberty/index.tsx
 *
 * Ð¡ompiled on Sun, 19 Nov 2023 21:28:07 UTC
 */class Y{constructor(){this.init(),N(this)}setFields(e){this.stats=e!=null&&e.stats?[...e.stats]:[],this.heroes=e!=null&&e.heroes?[...e.heroes]:[],this.jewels=e!=null&&e.jewels?[...e.jewels]:[]}addJewel(e=!1){const s={type:1,minerals:5,damage:5,life:5,armor:5,speed:5,unique:0,upgrade:0};this.jewels=[...this.jewels,s]}removeJewel(e){this.jewels=[...this.jewels.filter((s,t)=>t!=e)]}clearJewels(){this.jewels=[]}selectAllHero(){const e=this.heroes[1].active,s=[...this.heroes];s.forEach((t,c)=>{s[c]={...t},s[c].active=!e}),this.heroes=[...s]}updateAt(e,s,t,c){if(c){if(e=="stats"&&typeof s=="number"){this[e][s].value=t;return}if(e!="stats"&&typeof s=="object"){this[e][s.i][s.key]=t;return}}if(e=="stats"&&typeof s=="number"){const i=[...this.stats];i[s].value=t,this.stats=i;return}if(e!="stats"&&typeof s=="object"){const i=[...this[e]],y={...i[s.i]};if(y[s.key]=t,e=="jewels"&&s.key=="type"){const m=y,{min:d,max:S}=j.getJewelRange(m.type);m.minerals=b(d,S)*10,m.damage=b(d,S),m.life=b(d,S),m.armor=b(d,S),m.speed=b(d,S)}i[s.i]=y,this[e]=i;return}}reset(){this.init()}init(){this.stats=[{type:"number",value:15e8,description:"Total Kills"},{type:"number",value:9,description:"Best Solo"},{type:"number",value:1e3,description:"Jewel Dust"},{type:"number",value:250,description:"Skip Wave At"},{type:"boolean",value:!0,description:"Challenges"}],this.heroes=[{active:!0,name:"Sniper",type:1,kills:5e3,level:20,prestige:16},{active:!0,name:"Adept",type:2,kills:5e3,level:20,prestige:19},{active:!0,name:"Zeloat",type:3,kills:5e3,level:20,prestige:18},{active:!0,name:"Archon",type:4,kills:5e3,level:20,prestige:16},{active:!0,name:"Marine",type:5,kills:5e3,level:20,prestige:16},{active:!0,name:"Medic",type:6,kills:5e3,level:20,prestige:16},{active:!0,name:"Probe",type:7,kills:5e3,level:20,prestige:16},{active:!0,name:"Dark Templar",type:8,kills:5e3,level:20,prestige:16},{active:!0,name:"Firebat",type:9,kills:5e3,level:20,prestige:9}],this.jewels=[{type:12,minerals:1250,damage:125,life:125,armor:125,speed:125,unique:1,upgrade:0},{type:12,minerals:1250,damage:125,life:125,armor:125,speed:125,unique:2,upgrade:0},{type:12,minerals:1250,damage:125,life:125,armor:125,speed:125,unique:3,upgrade:0},{type:12,minerals:1250,damage:125,life:125,armor:125,speed:125,unique:4,upgrade:0},{type:12,minerals:1250,damage:125,life:125,armor:125,speed:125,unique:5,upgrade:0},{type:11,minerals:1250,damage:-5e3,life:125,armor:125,speed:-1e3,unique:0,upgrade:-200},{type:11,minerals:1250,damage:-5e3,life:125,armor:125,speed:-1e3,unique:0,upgrade:-200}]}}const r=new Y;class V{generateXML(e){e.removeSection("Purchases"),e.removeSection("Primary"),e.removeSection("SoulStat"),e.removeSection("SoulType"),e.removeSection("CLHistory");const s=r.stats[0].value;e.addKey("Primary","INT",s,"Primary");const t=parseInt(e.info.playerID.substring(7,11));if(e.addKey("Version","FIXED",I(K(T(s),t+1)),"Version"),r.stats[1].value>0){const g=r.stats[1].value;e.addKey("BS","INT",g,"Primary");const o=parseInt(e.info.playerID.substring(9,11));e.addKey("BC","FIXED",I(K(B(g,2),o+1)),"Primary")}const c=r.stats[2].value;e.addKey("Ratio","INT",c*13,"Settings");let i=c*10;e.addKey("skipwavethreshold","INT",r.stats[3].value,"Settings");let y=0,m=0;const d=r.heroes.length;for(let g=0;g<d;g++){const o=r.heroes[g];if(!o.active&&g>0)continue;const f=o.type;e.addKey("H"+f,"FLAG",!0,"Purchases"),e.addKey("H"+f+"K","INT",o.kills,"Primary"),e.addKey("H"+f+"L","INT",o.level,"Primary"),e.addKey("H"+f+"P","INT",o.prestige,"Primary"),m+=f*(f+1),y+=o.kills,y+=o.level-1,y+=o.prestige}e.addKey("Previous","FIXED",I(K(T(y),t+2)),"Version");const S=parseInt(e.info.playerID.substring(7,10));e.addKey("Upcoming","FIXED",I(K(T(m),S+3.25)),"Version");const D=r.jewels.length;for(let g=0;g<D;g++){const o=r.jewels[g];e.addKey("Soul"+(g+1),"INT",o.type,"SoulType"),e.addKey("Soul"+(g+1)+"Stat1","FIXED",o.minerals,"SoulStat"),e.addKey("Soul"+(g+1)+"Stat2","FIXED",o.damage,"SoulStat"),e.addKey("Soul"+(g+1)+"Stat3","FIXED",o.life,"SoulStat"),e.addKey("Soul"+(g+1)+"Stat4","FIXED",o.armor,"SoulStat"),e.addKey("Soul"+(g+1)+"Stat5","FIXED",o.speed,"SoulStat"),e.addKey("Soul"+(g+1)+"Stat6","FIXED",o.unique,"SoulStat"),e.addKey("Soul"+(g+1)+"Stat7","FIXED",o.upgrade,"SoulStat"),i+=o.minerals+o.damage+o.life+o.armor+o.speed+o.unique+o.upgrade}if(r.stats[4]){const g=parseInt(e.info.playerID.substring(8,10)),o=4;for(let f=0;f<30;f++){const u="C"+I(B((f+1)*g,2),o);e.addKey(u,"FLAG",!0,"CLHistory")}}const x=parseInt(e.info.playerID.substring(8,11)),p=I(K(T(i),x+T(i)+1));return e.addKey("Time","FIXED",p,"TimePlayed"),e.sort(),e.updateSignature(),e.getAsString()}parse(e,s){if(e.parse(s),e.sections.size<2||e.sections.get("Primary")==null||e.sections.get("Purchases")==null)return console.error("Wrong bank file!"),null;let t;const c=[{type:"number",value:0,description:"Total Kills"},{type:"number",value:1,description:"Best Solo"},{type:"number",value:0,description:"Jewel Dust"},{type:"number",value:300,description:"Skip Wave At"}];t=e.getKey("Primary","Primary"),t&&(c[0].value=t.value),t=e.getKey("BS","Primary"),t&&(c[1].value=t.value),t=e.getKey("Ratio","Settings"),t&&(c[2].value=t.value/13),t=e.getKey("skipwavethreshold","Settings"),t&&(c[3].value=t.value);const i=[{active:!0,name:"Sniper",type:1,kills:0,level:1,prestige:0},{active:!1,name:"Adept",type:2,kills:0,level:1,prestige:0},{active:!1,name:"Zeloat",type:3,kills:0,level:1,prestige:0},{active:!1,name:"Archon",type:4,kills:0,level:1,prestige:0},{active:!1,name:"Marine",type:5,kills:0,level:1,prestige:0},{active:!1,name:"Medic",type:6,kills:0,level:1,prestige:0},{active:!1,name:"Probe",type:7,kills:0,level:1,prestige:0},{active:!1,name:"Dark Templar",type:8,kills:0,level:1,prestige:0}];for(let m=0;m<9;m++){const d=m+1;t=e.getKey("H"+d,"Purchases"),t&&(i[m].active=!0,t=e.getKey("H"+d+"K","Primary"),t&&(i[m].kills=t.value),t=e.getKey("H"+d+"L","Primary"),t&&(i[m].level=t.value),t=e.getKey("H"+d+"P","Primary"),t&&(i[m].prestige=t.value))}const y=[];for(let m=0;m<100;m++){const d=m+1;if(t=e.getKey("Soul"+d,"SoulType"),!t)continue;const S={type:t.value,minerals:e.getKey("Soul"+d+"Stat1","SoulStat").value,damage:e.getKey("Soul"+d+"Stat2","SoulStat").value,life:e.getKey("Soul"+d+"Stat3","SoulStat").value,armor:e.getKey("Soul"+d+"Stat4","SoulStat").value,speed:e.getKey("Soul"+d+"Stat5","SoulStat").value,unique:e.getKey("Soul"+d+"Stat6","SoulStat").value,upgrade:e.getKey("Soul"+d+"Stat7","SoulStat").value};y.push(S)}return{stats:c,heroes:i,jewels:y}}getJewelTypes(){return[{value:"1",label:"Simple"},{value:"2",label:"Regular"},{value:"3",label:"Advanced"},{value:"4",label:"Brutality"},{value:"5",label:"Insanity"},{value:"6",label:"Nightmare"},{value:"7",label:"Chaos"},{value:"8",label:"Agonizing"},{value:"9",label:"Inferno"},{value:"10",label:"Tormented"},{value:"11",label:"Death"},{value:"12",label:"Unique"}]}getJewelRange(e){switch(e){case 1:return{min:1,max:5};case 2:return{min:5,max:10};case 3:return{min:5,max:20};case 4:return{min:10,max:30};case 5:return{min:15,max:40};case 6:return{min:20,max:50};case 7:return{min:25,max:60};case 8:return{min:30,max:75};case 9:return{min:35,max:90};case 10:return{min:40,max:90};case 11:return{min:50,max:125};case 12:return{min:50,max:125}}return null}getUniqueJewelsTypes(){return[{value:"1",label:"Marine buff"},{value:"2",label:"Cooldowns 10%"},{value:"3",label:"Adept buff"},{value:"4",label:"Ghost buff"},{value:"5",label:"Dark Templar buff"}]}getDifficultTypes(){return[{value:"0",label:"None"},{value:"1",label:"Easy"},{value:"2",label:"Normal"},{value:"3",label:"Hard"},{value:"4",label:"Brutal"},{value:"5",label:"Insane"},{value:"6",label:"Nightmare"},{value:"7",label:"Chaotic"},{value:"8",label:"Torture"},{value:"9",label:"Inferno"}]}}const j=new V,z=l=>a.jsxs(v,{style:{flexDirection:"column",border:"1px solid #ffffff40",padding:"10px",width:"200px",marginBottom:"10px"},children:[l.index>0?a.jsx(H,{onChange:e=>l.onChange(e,l.index,"active"),value:l.hero.active,label:l.hero.name,tip:"Activate this hero?"}):a.jsx(A,{children:l.hero.name}),a.jsxs(v,{style:{flexDirection:"row"},children:[a.jsx(w,{type:"number",min:"0",max:"1500000000",style:{width:"80px"},tip:"Kills",onChange:e=>l.onChange(e,l.index,"kills"),value:l.hero.kills.toString()}),a.jsx(w,{type:"number",min:"1",max:"50",style:{width:"20px"},tip:"Level",onChange:e=>l.onChange(e,l.index,"level"),value:l.hero.level.toString()}),a.jsx(w,{type:"number",min:"0",max:"16",style:{width:"20px"},tip:"Prestige",onChange:e=>l.onChange(e,l.index,"prestige"),value:l.hero.prestige.toString()})]})]}),G=R.memo(z),Q=l=>{const e=j.getJewelTypes(),s=j.getUniqueJewelsTypes(),{min:t,max:c}=j.getJewelRange(l.jewel.type);return a.jsxs(v,{style:{flexDirection:"row",border:"1px solid #ffffff40",padding:"10px",width:"570px",height:"min-content",alignItems:"center",justifyContent:"space-between",marginBottom:"10px"},children:[a.jsxs(v,{style:{flexDirection:"row"},children:[a.jsx(E,{style:{width:"100px",margin:"0"},onChange:i=>l.onChange(i,l.index,"type"),selected:l.jewel.type.toString(),children:e}),a.jsx(w,{type:"number",style:{width:"35px"},onChange:i=>l.onChange(i,l.index,"minerals"),value:l.jewel.minerals.toString(),min:(t*10).toString(),max:(c*10).toString(),tip:"Minerals:"+t*10+"-"+c*10}),a.jsx(w,{type:"number",style:{width:"25px"},onChange:i=>l.onChange(i,l.index,"damage"),value:l.jewel.damage.toString(),min:t.toString(),max:c.toString(),tip:"Damage:"+t+"-"+c}),a.jsx(w,{type:"number",style:{width:"25px"},onChange:i=>l.onChange(i,l.index,"life"),value:l.jewel.life.toString(),min:t.toString(),max:c.toString(),tip:"Life:"+t+"-"+c}),a.jsx(w,{type:"number",style:{width:"25px"},onChange:i=>l.onChange(i,l.index,"armor"),value:l.jewel.armor.toString(),min:t.toString(),max:c.toString(),tip:"Armor:"+t+"-"+c}),a.jsx(w,{type:"number",style:{width:"25px"},onChange:i=>l.onChange(i,l.index,"speed"),value:l.jewel.speed.toString(),min:t.toString(),max:c.toString(),tip:"Speed:"+t+"-"+c}),l.jewel.type==12?a.jsx(E,{style:{width:"160px",margin:"0"},onChange:i=>l.onChange(i,l.index,"unique"),selected:l.jewel.unique.toString(),children:s}):null]}),a.jsx(F,{onClick:()=>l.onRemove(l.index),style:{width:"25px"},children:"Ã"})]})},$=R.memo(Q),ee=M(l=>{const{accountStore:e,menuStore:s,mapStore:t,modalStore:c}=k(),[i,y]=h.useState(l.bankName),[m,d]=h.useState(J.get(P.ZOMBIE_WORLD_LIBERTY).authorID),S=J.get(P.ZOMBIE_WORLD_LIBERTY).title,D=h.useMemo(()=>new U(i,m,s.playerID,"1"),[e.current,s.playerID,i,m]),x=()=>{t.setMapData(e.current,S,{stats:r.stats,heroes:r.heroes,jewels:r.jewels})};h.useEffect(()=>{var n;const u=(n=t.list[e.current])==null?void 0:n[S];setTimeout(u?()=>r.setFields(u):p.onResetClick)},[e.current]);const p={onBankNameChange:h.useCallback(u=>{y(u)},[]),onAuthorIdChange:h.useCallback(u=>{d(u)},[]),onFileDrop:h.useCallback((u,n)=>{const C=j.parse(D,n);C&&(_.flushSync(()=>r.setFields()),r.setFields(C))},[]),onDownloadClick:h.useCallback(()=>{if(s.playerID.split("-").length!=4){c.setModal("WARN","This map requires a player id to generate valid bank! Use Help for details.");return}q(j.generateXML(D),i+".SC2Bank",!0),s.autoSave||x()},[D]),onCopyCodeClick:h.useCallback(()=>{if(s.playerID.split("-").length!=4){c.setModal("WARN","This map requires a player id to generate valid bank! Use Help for details.");return}X(j.generateXML(D),!0),s.autoSave||x()},[D]),onResetClick:h.useCallback(()=>{y(l.bankName),d(J.get(P.ZOMBIE_WORLD_LIBERTY).authorID),r.reset()},[]),onFieldChange:h.useCallback((u,n)=>{n<4?r.updateAt("stats",n,parseInt(u),n!=1):r.updateAt("stats",n,u,!1),s.autoSave&&x()},[]),onHeroChange:h.useCallback((u,n,C)=>{const L=C!="active";r.updateAt("heroes",{i:n,key:C},C=="active"?u:parseInt(u),L),s.autoSave&&x()},[]),onAllHeroSelect:h.useCallback(()=>{r.selectAllHero()},[]),onJewelAdd:h.useCallback(()=>{r.addJewel(),s.autoSave&&x()},[]),onJewelsClear:h.useCallback(()=>{r.clearJewels(),s.autoSave&&x()},[]),onJewelRemove:h.useCallback(u=>{r.removeJewel(u),s.autoSave&&x()},[]),onJewelChange:h.useCallback((u,n,C)=>{r.updateAt("jewels",{i:n,key:C},parseInt(u),!1),s.autoSave&&x()},[])},g=h.useMemo(()=>a.jsxs(a.Fragment,{children:[a.jsx(A,{style:{paddingTop:"5px"},children:"Stats:"}),a.jsx(v,{style:{flexDirection:"column",border:"1px solid #ffffff40",padding:"10px",width:"230px",height:"180px"},alignInputs:!0,children:r.stats.map((u,n)=>n==1?a.jsx(E,{label:u.description+":",onChange:p.onFieldChange,selected:r.stats[1].value.toString(),index:n,style:{width:"100px"},children:j.getDifficultTypes()},n):n==4?a.jsx(H,{label:u.description+":",onChange:p.onFieldChange,value:r.stats[4].value,index:n,style:{width:"100px"}},n):a.jsx(w,{label:u.description+":",index:n,type:"number",style:n==0?{width:"80px"}:{width:"50px"},onChange:p.onFieldChange,min:n<3?"0":"100",max:n==0?"1500000000":n==2?"500000":"300",value:u.value.toString()},n))})]}),[r.stats]),o=h.useMemo(()=>a.jsxs(a.Fragment,{children:[a.jsxs(v,{style:{flexDirection:"row",alignItems:"center",paddingTop:"20px"},children:[a.jsx(A,{children:"Heroes:"}),a.jsx(v,{style:{flexDirection:"row",justifyContent:"flex-end"},children:a.jsx(F,{onClick:p.onAllHeroSelect,children:"Select all"})})]}),a.jsx(v,{style:{flexDirection:"column",border:"1px solid #ffffff40",padding:"10px",width:"230px",height:"265px",overflowY:"auto"},children:r.heroes.map((u,n)=>a.jsx(G,{hero:u,onChange:p.onHeroChange,index:n},n))})]}),[r.heroes]),f=h.useMemo(()=>a.jsxs(v,{style:{flexDirection:"column"},children:[a.jsxs(v,{style:{flexDirection:"row",alignItems:"center"},children:[a.jsx(A,{style:{paddingTop:"5px"},children:"Jewels:"}),a.jsxs(v,{style:{flexDirection:"row",justifyContent:"flex-end"},children:[a.jsx(F,{onClick:p.onJewelAdd,children:"Add"}),a.jsx(F,{onClick:p.onJewelsClear,children:"Clear"})]})]}),a.jsx(v,{style:{flexDirection:"column",border:"1px solid #ffffff40",padding:"10px",width:"600px",height:"508px",overflowY:"auto"},children:r.jewels.map((u,n)=>a.jsx($,{jewel:u,index:n,onChange:p.onJewelChange,onRemove:p.onJewelRemove},W()))})]}),[r.jewels]);return a.jsx(Z,{bankName:i,authorID:m,onBankNameChange:p.onBankNameChange,onAuthorIdChange:p.onAuthorIdChange,onFileDrop:p.onFileDrop,onDownload:p.onDownloadClick,onCopy:p.onCopyCodeClick,onReset:p.onResetClick,children:a.jsxs(a.Fragment,{children:[a.jsx(O,{children:"Note: The map is still in beta. Some combinations can be bugged!"}),a.jsxs(v,{style:{flexDirection:"row"},children:[a.jsxs(v,{style:{flexDirection:"column"},children:[g,o]}),f]})]})})}),ae=R.memo(ee);export{ae as default};
